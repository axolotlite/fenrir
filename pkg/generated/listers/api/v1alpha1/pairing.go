/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "games-on-whales.github.io/direwolf/pkg/api/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// PairingLister helps list Pairings.
// All objects returned here must be treated as read-only.
type PairingLister interface {
	// List lists all Pairings in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*apiv1alpha1.Pairing, err error)
	// Pairings returns an object that can list and get Pairings.
	Pairings(namespace string) PairingNamespaceLister
	PairingListerExpansion
}

// pairingLister implements the PairingLister interface.
type pairingLister struct {
	listers.ResourceIndexer[*apiv1alpha1.Pairing]
}

// NewPairingLister returns a new PairingLister.
func NewPairingLister(indexer cache.Indexer) PairingLister {
	return &pairingLister{listers.New[*apiv1alpha1.Pairing](indexer, apiv1alpha1.Resource("pairing"))}
}

// Pairings returns an object that can list and get Pairings.
func (s *pairingLister) Pairings(namespace string) PairingNamespaceLister {
	return pairingNamespaceLister{listers.NewNamespaced[*apiv1alpha1.Pairing](s.ResourceIndexer, namespace)}
}

// PairingNamespaceLister helps list and get Pairings.
// All objects returned here must be treated as read-only.
type PairingNamespaceLister interface {
	// List lists all Pairings in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*apiv1alpha1.Pairing, err error)
	// Get retrieves the Pairing from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*apiv1alpha1.Pairing, error)
	PairingNamespaceListerExpansion
}

// pairingNamespaceLister implements the PairingNamespaceLister
// interface.
type pairingNamespaceLister struct {
	listers.ResourceIndexer[*apiv1alpha1.Pairing]
}
