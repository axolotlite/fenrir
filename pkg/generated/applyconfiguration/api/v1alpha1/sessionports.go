/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// SessionPortsApplyConfiguration represents a declarative configuration of the SessionPorts type for use
// with apply.
type SessionPortsApplyConfiguration struct {
	RTSP     *int32 `json:"rtsp,omitempty"`
	Control  *int32 `json:"control,omitempty"`
	VideoRTP *int32 `json:"videoRTP,omitempty"`
	AudioRTP *int32 `json:"audioRTP,omitempty"`
}

// SessionPortsApplyConfiguration constructs a declarative configuration of the SessionPorts type for use with
// apply.
func SessionPorts() *SessionPortsApplyConfiguration {
	return &SessionPortsApplyConfiguration{}
}

// WithRTSP sets the RTSP field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RTSP field is set to the value of the last call.
func (b *SessionPortsApplyConfiguration) WithRTSP(value int32) *SessionPortsApplyConfiguration {
	b.RTSP = &value
	return b
}

// WithControl sets the Control field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Control field is set to the value of the last call.
func (b *SessionPortsApplyConfiguration) WithControl(value int32) *SessionPortsApplyConfiguration {
	b.Control = &value
	return b
}

// WithVideoRTP sets the VideoRTP field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the VideoRTP field is set to the value of the last call.
func (b *SessionPortsApplyConfiguration) WithVideoRTP(value int32) *SessionPortsApplyConfiguration {
	b.VideoRTP = &value
	return b
}

// WithAudioRTP sets the AudioRTP field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AudioRTP field is set to the value of the last call.
func (b *SessionPortsApplyConfiguration) WithAudioRTP(value int32) *SessionPortsApplyConfiguration {
	b.AudioRTP = &value
	return b
}
