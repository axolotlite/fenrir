/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// WolfConfigApplyConfiguration represents a declarative configuration of the WolfConfig type for use
// with apply.
type WolfConfigApplyConfiguration struct {
	StartAudioServer       *bool                               `json:"startAudioServer,omitempty"`
	StartVirtualCompositor *bool                               `json:"startVirtualCompositor,omitempty"`
	Title                  *string                             `json:"title,omitempty"`
	ID                     *string                             `json:"id,omitempty"`
	Audio                  *WolfStreamConfigApplyConfiguration `json:"audio,omitempty"`
	Video                  *WolfStreamConfigApplyConfiguration `json:"video,omitempty"`
	Runner                 *WolfRunnerConfigApplyConfiguration `json:"runner,omitempty"`
}

// WolfConfigApplyConfiguration constructs a declarative configuration of the WolfConfig type for use with
// apply.
func WolfConfig() *WolfConfigApplyConfiguration {
	return &WolfConfigApplyConfiguration{}
}

// WithStartAudioServer sets the StartAudioServer field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the StartAudioServer field is set to the value of the last call.
func (b *WolfConfigApplyConfiguration) WithStartAudioServer(value bool) *WolfConfigApplyConfiguration {
	b.StartAudioServer = &value
	return b
}

// WithStartVirtualCompositor sets the StartVirtualCompositor field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the StartVirtualCompositor field is set to the value of the last call.
func (b *WolfConfigApplyConfiguration) WithStartVirtualCompositor(value bool) *WolfConfigApplyConfiguration {
	b.StartVirtualCompositor = &value
	return b
}

// WithTitle sets the Title field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Title field is set to the value of the last call.
func (b *WolfConfigApplyConfiguration) WithTitle(value string) *WolfConfigApplyConfiguration {
	b.Title = &value
	return b
}

// WithID sets the ID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ID field is set to the value of the last call.
func (b *WolfConfigApplyConfiguration) WithID(value string) *WolfConfigApplyConfiguration {
	b.ID = &value
	return b
}

// WithAudio sets the Audio field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Audio field is set to the value of the last call.
func (b *WolfConfigApplyConfiguration) WithAudio(value *WolfStreamConfigApplyConfiguration) *WolfConfigApplyConfiguration {
	b.Audio = value
	return b
}

// WithVideo sets the Video field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Video field is set to the value of the last call.
func (b *WolfConfigApplyConfiguration) WithVideo(value *WolfStreamConfigApplyConfiguration) *WolfConfigApplyConfiguration {
	b.Video = value
	return b
}

// WithRunner sets the Runner field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Runner field is set to the value of the last call.
func (b *WolfConfigApplyConfiguration) WithRunner(value *WolfRunnerConfigApplyConfiguration) *WolfConfigApplyConfiguration {
	b.Runner = value
	return b
}
